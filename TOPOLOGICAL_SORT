class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        // BFS
        int[] ans = new int[V];
        int[] indegree = new int[V];
        for (ArrayList<Integer>li:adj)
        {
            for (int w:li)
            {
                indegree[w]++;
            }
        }
        Queue<Integer>q = new LinkedList<>();
        for (int v=0;v<V;v++)
        {
            if (indegree[v]==0) q.add(v);
        }
        int idx=0;
        while(!q.isEmpty())
        {
            int val = q.remove();
            ans[idx++]=val;
            for (int neighbour:adj.get(val))
            {
                if (--indegree[neighbour]==0)
                {
                    q.add(neighbour);
                }
            }
            
            
        }
        return ans;
    }
}
