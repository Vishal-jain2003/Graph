class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        // using dfs
        boolean[] vis = new boolean[V];
        for (int v=0;v<V;v++)
        {
            if (!vis[v])
            {
                if (dfs(v,adj,vis,-1)) return true;
            }
        }
        return false;
    }
    static boolean dfs(int v,ArrayList<ArrayList<Integer>>adj,boolean[] vis,int parent)
    {
        vis[v]=true;
        for (int w:adj.get(v))
        {
            if (!vis[w])
            {
                if (dfs(w,adj,vis,v)) return true;
            }
            else if (parent!=w) return true;
        }
        return false;
    }
}
